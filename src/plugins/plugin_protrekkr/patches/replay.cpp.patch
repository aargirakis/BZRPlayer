--- release/distrib/replay/lib/replay.cpp	2024-02-05 23:48:28.000000000 +0100
+++ release/distrib/replay/lib/replay.cpp	2024-09-26 12:41:44.811226575 +0200
@@ -946,9 +946,9 @@
 
 // ------------------------------------------------------
 // Audio mixer
-void STDCALL Mixer(Uint8 *Buffer, Uint32 Len)
+Uint32 STDCALL Mixer(Uint8 *Buffer, Uint32 Len)
 {
-#if defined(__MACOSX__)
+#if defined(__MACOSX__) || defined(BZR2)
     float *pSamples_flt = (float *) Buffer;
     short *pSamples_int = (short *) Buffer;
 #else
@@ -956,10 +956,11 @@
 #endif
     int i;
 
-#if !defined(__STAND_ALONE__)
+#if !defined(__STAND_ALONE__) || defined(BZR2)
     float clamp_left_value;
     float clamp_right_value;
 #endif
+    Uint32 numSamples = Len;
 
 #if !defined(__STAND_ALONE__)
     if(!rawrender && Buffer)
@@ -968,10 +969,21 @@
 
 #if defined(__MACOSX__)
         for(i = Len - 1; i >= 0; i -= AUDIO_16Bits ? 4 : 8)
+#elif defined(BZR2)
+        for (; numSamples; --numSamples)
 #else
         for(i = Len - 1; i >= 0; i -= 4)
 #endif
         {
+            if (!Song_Playing)
+                break;
+            if (done)
+            {
+                if (numSamples == Len)
+                    done = FALSE;
+                break;
+            }
+
             Get_Player_Values();
 
 #if !defined(__STAND_ALONE__)
@@ -1030,6 +1042,9 @@
                 *pSamples_flt++ = left_float;
                 *pSamples_flt++ = right_float;
             }
+#elif defined (BZR2)
+            *pSamples_flt++ = left_float;
+            *pSamples_flt++ = right_float;
 #else
             *pSamples++ = left_value;
             *pSamples++ = right_value;
@@ -1069,6 +1084,7 @@
 #if !defined(__STAND_ALONE__)
     } //RawRender
 #endif
+    return Len - numSamples;
 }
 
 // ------------------------------------------------------
