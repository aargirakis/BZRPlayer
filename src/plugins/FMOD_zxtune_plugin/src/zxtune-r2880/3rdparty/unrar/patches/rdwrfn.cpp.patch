Index: rdwrfn.cpp
===================================================================
--- rdwrfn.cpp
+++ rdwrfn.cpp
@@ -14,6 +14,7 @@
   ShowProgress=true;
   TestMode=false;
   SkipUnpCRC=false;
+  OldFormat=false;
   PackVolume=false;
   UnpVolume=false;
   NextVolumeMissing=false;
@@ -48,9 +49,10 @@
     size_t ReadSize=((int64)Count>UnpPackedSize) ? (size_t)UnpPackedSize:Count;
     if (UnpackFromMemory)
     {
-      memcpy(Addr,UnpackFromMemoryAddr,UnpackFromMemorySize);
-      RetCode=(int)UnpackFromMemorySize;
-      UnpackFromMemorySize=0;
+      RetCode=(int)(ReadSize>UnpackFromMemorySize ? UnpackFromMemorySize:ReadSize);
+      memcpy(Addr,UnpackFromMemoryAddr,RetCode);
+      UnpackFromMemorySize-=RetCode;
+      UnpackFromMemoryAddr+=RetCode;
     }
     else
     {
@@ -175,7 +177,7 @@
   CurUnpWrite+=Count;
   if (!SkipUnpCRC)
 #ifndef SFX_MODULE
-    if (((Archive *)SrcFile)->OldFormat)
+    if (OldFormat)
       UnpFileCRC=OldCRC((ushort)UnpFileCRC,Addr,Count);
     else
 #endif
@@ -232,7 +234,10 @@
 void ComprDataIO::SetFiles(File *SrcFile,File *DestFile)
 {
   if (SrcFile!=NULL)
+  {
     ComprDataIO::SrcFile=SrcFile;
+    OldFormat=((Archive *)SrcFile)->OldFormat;
+  }
   if (DestFile!=NULL)
     ComprDataIO::DestFile=DestFile;
   LastPercent=-1;
@@ -248,6 +253,11 @@
 
 void ComprDataIO::SetEncryption(int Method,SecPassword *Password,const byte *Salt,bool Encrypt,bool HandsOffHash)
 {
+#ifdef RAR_NOCRYPT
+  (void)Salt;
+  (void)HandsOffHash;
+#endif
+
   if (Encrypt)
   {
     Encryption=Password->IsSet() ? Method:0;
@@ -283,6 +293,14 @@
 #endif
 
 
+void ComprDataIO::SetUnpackFromMemory(const byte* Addr,uint Size,bool oldFormat)
+{
+  UnpackFromMemory=true;
+  OldFormat=oldFormat;
+  UnpackFromMemoryAddr=Addr;
+  UnpackFromMemorySize=Size;
+  UnpFileCRC=oldFormat ? 0:0xffffffff;
+}
 
 
 void ComprDataIO::SetUnpackToMemory(byte *Addr,uint Size)
@@ -292,4 +310,7 @@
   UnpackToMemorySize=Size;
 }
 
-
+uint ComprDataIO::GetUnpackedCrc()
+{
+  return OldFormat ? UnpFileCRC:UnpFileCRC^0xffffffff;
+}
