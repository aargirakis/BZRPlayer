    const Debug::Stream Dbg("<TMPL_VAR NAME=DEBUGMODULE>");

    class DynamicApi : public Api
    {
    public:
      explicit DynamicApi(Platform::SharedLibrary::Ptr lib)
        : Lib(lib)
      {
        Dbg("Library loaded");
      }

      ~DynamicApi() override
      {
        Dbg("Library unloaded");
      }

      <TMPL_LOOP NAME=FUNCTIONS>
      <TMPL_VAR NAME=DECLARATION> override
      {
        static const char NAME[] = "<TMPL_VAR NAME=NAME>";
        typedef <TMPL_VAR NAME=RETTYPE>(<TMPL_VAR NAME=CALLTYPE> *FunctionType)(<TMPL_VAR NAME=PARAMTYPES>);
        const FunctionType func = Lib.GetSymbol<FunctionType>(NAME);
        return func(<TMPL_VAR NAME=PARAMNAMES>);
      }
      </TMPL_LOOP>
    private:
      const Platform::SharedLibraryAdapter Lib;
    };
