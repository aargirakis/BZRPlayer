	ift	SAP
	opt	h-
	dta	c'SAP',13,10
	dta	c'AUTHOR "Piotr Fusik (0xF)"',13,10
	dta	c'NAME "6502 Undocumented SHX/SHY Test"',13,10
	dta	c'DATE "27/11/2010"',13,10
	dta	c'TYPE D',13,10
	dta	c'INIT 3000',13,10
	dta	c'TIME 00:10',13,10
	opt	h+
	eif

addr	equ	$80	; 2 bytes
index	equ	$82
data	equ	$83
dest	equ	$84	; 2 bytes
expected	equ	$86
opcode	equ	$87
got	equ	$88
pos	equ	$89
scrptr	equ	$8a	; 2 bytes
printptr	equ	$8c	; 2 bytes

	org	f:$3000
main
:SAP	mwa	#$1000	scrptr
	lda	<title
	ldx	>title
	jsr	print

:!SAP	sei:inc	$d40e
:!SAP	mva	#$fe	$d301
	ldx	#0
loop
	stx	pos
	mwa	input,x	addr
	mva	input+2,x	index
	mva	input+3,x	data
	jsr	do_test
	ldx	pos
	inx
	bne	loop

:!SAP	mva	#$ff	$d301
	lda	<pass
	ldx	>pass
	jsr	print
	mwa	#$af30	$d200
	jmp	*

do_test
	lda	addr
	add	index
	sta	dest
	php
	lda	addr+1
	add	#1
	and	data
	sta	expected
	plp
	scs:lda	addr+1
	sta	dest+1
	cmp	#0
	bne	no_zp
	lda	dest
	and	#$f0
	cmp	#$80
	bne	run
	beq	skip	!
no_zp
	and	#$f8
	cmp	#$10
	beq	skip
	cmp	#$30
	beq	skip
	cmp	#$d0
	beq	skip
run
	mwa	addr	shx+1
	mwa	addr	shy+1
	lda	expected
	eor	#$ff
	sta	(dest),0
	ldx	data
	ldy	index
shx	dta	$9e,a(0)
	ldx	#$9e
	lda	(dest),0
	cmp	expected
	bne	error
	eor	#$ff
	sta	(dest),y
	ldy	data
	ldx	index
shy	dta	$9c,a(0)
	ldx	#$9c
	lda	(dest),0
	cmp	expected
	bne	error
skip
	rts

error
:!SAP	mva	#$ff	$d301
	stx	opcode
	sta	got
	lda	<fail
	ldx	>fail
	jsr	print
	lda	opcode
	jsr	put_hex_byte
	lda	addr
	jsr	put_hex_byte
	lda	addr+1
	jsr	put_hex_byte
	lda	<xequ
	ldx	>xequ
	jsr	print
	lda	data
	ldx	opcode
	cpx	#$9e
	seq:lda	index
	jsr	put_hex_byte
	lda	<yequ
	ldx	>yequ
	jsr	print
	lda	index
	ldx	opcode
	cpx	#$9e
	seq:lda	data
	jsr	put_hex_byte
	lda	<gott
	ldx	>gott
	jsr	print
	lda	got
	jsr	put_hex_byte
	lda	<exp
	ldx	>exp
	jsr	print
	lda	expected
	jsr	put_hex_byte
	lda	#$9b
	jsr	put_char
	mwa	#$cfa0	$d200
	jmp	*

put_hex_byte
	pha
:4	lsr	@
	jsr	put_hex_nibble
	pla
	and	#$f
put_hex_nibble
	cmp	#10
	sed
	adc	#'0'
	cld
put_char
	ift	SAP
	sta	(scrptr),0
	inw	scrptr
	rts
	els
	mvx	#11	$342
	mwx	#0	$348
	jmp	$e456
	eif

print
	sta	printptr
	stx	printptr+1
	jmp	print_2
print_1
	jsr	put_char
	inw	printptr
print_2
	lda	(printptr),0
	bne	print_1
	rts

; just some random data
input
	dta	$73,$c3,$26,$17,$3b,$9b,$82,$06,$6e,$f8,$c6,$74,$83,$6c,$d6,$7c
	dta	$5b,$4f,$33,$72,$ef,$55,$69,$3f,$64,$f1,$02,$21,$ea,$51,$ad,$d8
	dta	$55,$41,$bd,$cc,$c9,$b3,$a7,$30,$78,$41,$ab,$ac,$bc,$61,$49,$94
	dta	$95,$a0,$b4,$37,$da,$aa,$e2,$50,$0f,$5f,$66,$12,$4d,$c4,$b7,$f4
	dta	$1b,$1a,$18,$a2,$a2,$df,$b6,$36,$27,$f7,$33,$3a,$33,$e2,$49,$6e
	dta	$4d,$25,$94,$f2,$b4,$c4,$50,$be,$f8,$0d,$10,$13,$e3,$82,$32,$cb
	dta	$9a,$1a,$1e,$2a,$52,$bb,$14,$25,$90,$1d,$96,$b9,$54,$e8,$2d,$45
	dta	$19,$5b,$9b,$86,$0e,$34,$3a,$2c,$77,$35,$9b,$91,$9d,$f8,$17,$a9
	dta	$2a,$70,$7a,$9e,$6b,$ce,$6f,$35,$4e,$1d,$d2,$6c,$95,$53,$95,$77
	dta	$17,$27,$5a,$83,$7e,$76,$74,$65,$6e,$74,$6a,$a5,$75,$79,$ac,$02
	dta	$af,$b5,$a2,$e1,$89,$87,$be,$c3,$87,$cd,$ae,$41,$74,$ea,$69,$8e
	dta	$ed,$d6,$2a,$1d,$a3,$eb,$17,$5a,$43,$d2,$a7,$0e,$6b,$43,$7b,$73
	dta	$92,$ec,$d3,$7a,$50,$3b,$3e,$57,$e6,$65,$b9,$c9,$75,$5f,$d8,$3a
	dta	$ca,$1e,$2c,$33,$26,$dd,$85,$28,$e9,$bd,$45,$34,$8a,$79,$59,$c1
	dta	$c7,$7c,$10,$9d,$6b,$28,$75,$9e,$a0,$89,$4a,$40,$26,$49,$5b,$54
	dta	$64,$1a,$48,$49,$b5,$7e,$68,$0f,$d6,$0e,$00,$27,$e2,$26,$62,$d7

title	dta	c'CPU: SHX/SHY...',0
pass	dta	c'Pass',$9b,0
fail	dta	c'FAIL.',$9b,c'Code:',0
xequ	dta	c' X=',0
yequ	dta	c' Y=',0
gott	dta	c' got ',0
exp	dta	c' exp ',0

	ift	!SAP
	run	main
	eif
