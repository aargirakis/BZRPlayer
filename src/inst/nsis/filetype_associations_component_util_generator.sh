#!/bin/bash
#
# NAME
#     filetype_associations_component_util_generator.sh - generate include/FiletypeAssociationsComponentUtil.nsh
#     NSIS Header file used to populate BZR2 Windows installer's filetype associations component
#     in a programmatic way starting from supported XDG MIME types, getting around NSIS engine limitations
#     that do not allow to fully manage Sections and SectionGroups at runtime
#
# SYNOPSIS
#     ./filetype_associations_component_util_generator.sh
#

set -e

bold=$'\e[1m'
bold_reset=$'\e[0m'
requirements=(cat sed sort)
bzr2_pkgname="bzr-player"
bzr2_setup_filename="bzr2-wine_setup.sh"
bzr2_setup="../$bzr2_setup_filename"
bzr2_xml_filename="x-$bzr2_pkgname.xml"
bzr2_xml="../$bzr2_xml_filename"
mime_dir_system="/usr/share/mime"
mime_packages_dir_system="$mime_dir_system/packages"
output_filename="include/FiletypeAssociationsComponentUtil.nsh"
info_text="/*
_____________________________________________________________________________

                This file has been automatically generated by
                 filetype_associations_component_util_generator.sh
_____________________________________________________________________________
*/
"

check_requirements() {
  for requirement in "${requirements[@]}"; do
    if ! type "$requirement" &>/dev/null; then
      echo -e "\nplease install ${bold}$requirement${bold_reset}"
      exit 1
    fi
  done
}

check_requirements

rm -rf "$output_filename"
echo "$info_text" >>"$output_filename"

mime_types_supported=()
mapfile -t mime_types_supported < <(sed -n "\|mime_types_supported=(| , \|)|{p; \|)|q}" "$bzr2_setup" |
  sed -e 's:mime_types_supported=(::g' -e 's:)::g' -e 's: :\n:g' | sed '/^[[:space:]]*$/d')
IFS=" " read -r -a mime_types_supported <<<"$(tr ' ' '\n' <<<"${mime_types_supported[@]}" | sort -u | tr '\n' ' ')"

bzr2_xml_content=$(cat "$bzr2_xml")
declare -A supportedFiletypes=()

for mime_type in "${mime_types_supported[@]}"; do
  sed_pattern="\|<mime-type type=\"$mime_type\">| , \|</mime-type>|{p; \|</mime-type>|q}"
  mime_single=$(echo "$bzr2_xml_content" | sed -n "$sed_pattern")

  if [ -z "$mime_single" ]; then
    mime_single=$(sed -n "$sed_pattern" "$mime_packages_dir_system/freedesktop.org.xml")
  fi

  mime_comment=$(echo "$mime_single" | grep "<comment>" | sed 's:<comment>::;s:</comment>::;s:    ::' |
    sed 's/^ *//g')

  mime_suffixes_multilined=$(echo "$mime_single" | grep "<glob " | sed -E -e 's:<glob ::g' -e 's: weight="[0-9]+"::g' \
    -e 's:pattern="::g' -e 's:"/>::g' -e '/\*$/d' -e 's:\*.:.:g')

  mime_suffixes_onelined=""

  while read -r line; do
    mime_suffixes_onelined+="$line "
  done <<<"$mime_suffixes_multilined"

  mime_suffixes_onelined="${mime_suffixes_onelined%"${mime_suffixes_onelined##*[![:space:]]}"}"
  supportedFiletypes["$mime_comment"]="$mime_suffixes_onelined"
done

readarray -d '' supportedFiletypesSorted < <(printf "%s\0" "${!supportedFiletypes[@]}" | sort -z)

echo -n "!macro addFiletypeAssociationsComponentContent" >>"$output_filename"

i=0
for key in "${supportedFiletypesSorted[@]}"; do
  echo -en "\n  SectionGroup \"$key\"" >>"$output_filename"

  if [ $i = 0 ]; then
    echo -en " firstFiletypeAssociationsSection" >>"$output_filename"
  fi

  IFS=" " read -r -a mime_suffixes_current <<<"${supportedFiletypes[$key]}"

  for ((j = 0; j < "${#mime_suffixes_current[@]}"; j++)); do
    echo -en "\n    Section \"${mime_suffixes_current[$j]}\"" >>"$output_filename"

    if [ $i == $((${#supportedFiletypesSorted[@]} - 1)) ] && [ $j == $((${#mime_suffixes_current[@]} - 1)) ]; then
      echo -en " lastFiletypeAssociationsSection" >>"$output_filename"
    fi

    echo -en "\n      !insertmacro addSectionContent ${mime_suffixes_current[$j]}
    SectionEnd" >>"$output_filename"
  done

  echo -en "\n  SectionGroupEnd" >>"$output_filename"
  i=$((i + 1))
done

echo -e "\n!macroend" >>"$output_filename"
